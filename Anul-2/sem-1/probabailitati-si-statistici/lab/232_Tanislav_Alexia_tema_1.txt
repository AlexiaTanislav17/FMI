#Q: Daca vreau sa le sterg pe toate cum procedez?
rm(list=ls())

#Q: Explicati de ce nu merge urmatoarea atribuire multipla
d2+d4 ->d6<-d1
# pt ca i s-ar atribui lui d6 doua valori in acelasi timp


#Q: Explicati rolul parantezelor si al operatorului : in urmatoarea situatie
1:n-1
1:(n-1)
2*1:5
2*1+1:5
2+1:5
(2*1+1):5
30:3
#operatorul : are prioritate fata de orice alt operator. cand avem paranteze
#acesta va avea prima prioritatea inainte de :


#Q: Explicati comportamentul operatorului : 
1.4:5
#creeaza o secventa de numere: adauga 1 de fiecare data cand trece prin 
#loop, incepand cu nr 1.4


#Q: Explicati urmatoarea secventa de cod
(b <- c(rep(rep(c(0,2),3),1:6),rep(rep(c(0:3,6),c(2,4:7)),24)))
#rep(c(0,2), 3) repeta secventa 0,2 de 3 ori
#rep(..., 1:6) repeta acest vector de 0 2 de 1 până la 6 ori pentru fiecare element
#rep(c(0:3, 6), c(2, 4:7)) repeta secventa 0 1 2 3 6 de 5 ori (din vectorul c(2, 4:7).
#ultima parte repeta rezultatul anterior de 24 de ori si este atribuit lui b



#Q: Explicati urmatoarea secventa de cod
x <- sample(1:1000,100)
x[x%%8==0][1:3]
#prima linie iti creeaza o secventa de 100 de numere random intre 1 si 1000 atribuite lui x
#a doua linie iti afiseaza primele 3 numere care sunt divizibile cu 8 din x


#Q: Explicati urmatoarea secventa de cod
x_1 <- x[-(1:3)]
#i se atribuie lui x_1 o lista formata din toate numerele din x fara primele 3 


#Q: Explicati ce face urmatoarea comanda
c1 <- a1+b
#fiecare element din a1 este adunat cu fiecare element din b, dar lungimea lui b este mai mica decat lungimea lui a1,
#asa ca acesta reia elementele din b pentru a fi adunate cu elementele ramase din a1


#Q: De ce vector_mixt este in continuare un vector si nu o lista?
#o lista poate contine elemente de tipuri diferite in timp ce un vector nu
#daca un vector contine si elemente de alt tip, acestea sunt convertite la tipul caracter

#Q: Ce este in neregula cu expresia de mai jos?
x <- sample(1:100,10)
y <- (x[1:50]<30)
#se face o selectie de primele 50 de nr din x si se evalueaza pentru fiecare numar val de adevar (daca este < 30)
#pentru ca x are doar 10 numere, restul de 40 de numere din selectie sunt trecute ca fiind nevalabile (nu exista)

#Q: Cum putem elimina in mod automat valorile NA dintr-un vector?
#HINT: is.na()
x_2 <- y[!is.na(y)]


#Q: Creati un vector logic t ce compara daca elementul de pe pozitia i(impara) 
# este mai mic decat elementul de pe pozitia para imediat urmatoare
x3<-sample(1:100, 10)
x3
y3<-(x3[1:9]>x3[2:10])
y3



#Q: Determinati pozitiile pentru care conditia de la prima intrebare este adevarata
#HINT: which()
poz<-which(y3)
poz



#Q: Determinati cate numere cuprinse intre 411 si 7870 sunt divizibile cu 9
#dar nu cu 5
nr<-411:7870
nr
div<-nr[nr%%9==0 & nr%% 5!=0]
div
lung<-length(div)
lung




#To do

# Construiti doi vectori x si y cu 1000 de elemente fiecare, extrase in mod
#aleator din multimea cu numere intregi -24500:76000.
x<-sample(-24500:76000, 1000)
x
y<-sample(-24500:76000, 1000)
y



#a)Stabiliti care dintre cei doi vectori are mai multe elemente,
#luate in valoare absoluta, mai mari decat valoarea absoluta a elementului
#corespondent din celalalt vector
absx<-abs(x)
absy<-abs(y)

if(sum(absx)>sum(absy)){
  cat("este x")
}else{
  cat("este y")
}


#b)Stabiliti care dintre cei doi vectori are minimul pe o pozitie mai mare
minx<-which.min(x)
miny<-which.min(y)

if (minx>miny) {
  cat("este x")
} else if (minx>miny) {
  cat("este y")
} else {
  cat("sunt pe aceeasi pozitie")
}


#c)Stabiliti care dintre cei doi vectori are cele mai multe valori care se repeta
repx <- sum(duplicated(x))
repy <- sum(duplicated(y))

if (repx > repy) {
  cat("este x")
} else if (repy > repx) {
  cat("este y")
} else {
  cat("au la fel de multe")
}




#d)Stabiliti care dintre cei doi vectori are o secventa de cel putin 2 valori consecutive
difx <- any(diff(x) == 1)
dify <- any(diff(y) == 1)

if (difx && !dify) {
  cat("este x")
} else if (!difx && dify) {
  cat("este y")
} else if (difx && dify) {
  cat("ambele au")
} else {
  cat("nici x si nici y nu are")
}





#e)Stabiliti care dintre cei doi vectori are mai multe valori divizibile cu corespondentele
#lor din celalalt vector.

div_xy<-sum(x%%y==0)  
div_yx<-sum(y%%x==0)

if (div_xy>div_yx) {
  cat("este x")
} else if (div_yx>div_xy) {
  cat("este y")
} else {
  cat("ambele au acelasi nr")
}

